{
    "swagger": "2.0",
    "info": {
        "description": "Blog server with swagger and tests for handlers.",
        "title": "Mongoblog server",
        "contact": {
            "name": "Rishat Ishbulatov",
            "email": "progjb@gmail.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/docs/swagger.json": {
            "get": {
                "description": "Returns swagger's json docs",
                "produces": ["application/json"],
                "summary": "returns json docs",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/posts": {
            "post": {
                "description": "Create new post and return json",
                "produces": ["application/json"],
                "summary": "create new post",
                "parameters": [
                    {
                        "description": "title, author, content",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}": {
            "put": {
                "description": "renew post by id",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "summary": "renew post by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of post",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "title, author, content",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "deletes a post by id",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "summary": "deletes a post by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id of post",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "hex",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{template}": {
            "get": {
                "description": "return templated page if exist",
                "produces": ["text/html"],
                "summary": "serve templated page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "in form like index.html",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ErrorModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "desc": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "internal": {
                    "type": "object"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "hex": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}
